{
	"info": {
		"_postman_id": "cico-backend-api",
		"name": "CICO Backend API",
		"description": "Complete API collection for the CICO (Check-In Check-Out) backend system with user-based location management, attendance tracking, and proximity detection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "cico-backend"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if the server is running and healthy"
			},
			"response": []
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"john_doe\",\n  \"password\": \"securepassword123\",\n  \"companyId\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account with optional company assignment"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.token);",
									"    pm.environment.set('userId', response.user.id);",
									"    pm.environment.set('username', response.user.username);",
									"    pm.environment.set('companyId', response.user.companyId || '');",
									"    console.log('Token saved:', response.token);",
									"    console.log('Company ID:', response.user.companyId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with username and password. Automatically saves the JWT token and company information."
					},
					"response": []
				},
				{
					"name": "Assign User to Company",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": {{userId}},\n  \"companyId\": {{companyId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/assign-company",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"assign-company"
							]
						},
						"description": "Assign an existing user to a company"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Get current user information. Requires authentication token. Used to check login status and get fresh user data."
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and company assignment"
		},
		{
			"name": "Company Management",
			"item": [
				{
					"name": "Create Company",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Acme Corporation\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/companies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"companies"
							]
						},
						"description": "Create a new company"
					},
					"response": []
				},
				{
					"name": "Get All Companies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/companies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"companies"
							]
						},
						"description": "Get all companies in the system"
					},
					"response": []
				},
				{
					"name": "Get Company by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/companies/{{companyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"companies",
								"{{companyId}}"
							]
						},
						"description": "Get a specific company by ID"
					},
					"response": []
				},
				{
					"name": "Update Company",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Acme Corporation Updated\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/companies/{{companyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"companies",
								"{{companyId}}"
							]
						},
						"description": "Update company name"
					},
					"response": []
				},
				{
					"name": "Delete Company",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/companies/{{companyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"companies",
								"{{companyId}}"
							]
						},
						"description": "Delete a company (use with caution)"
					},
					"response": []
				}
			],
			"description": "Company management endpoints"
		},
		{
			"name": "Location Management",
			"item": [
				{
					"name": "Create Home Office Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('homeLocationId', response.id);",
									"    pm.environment.set('locationId', response.id);",
									"    console.log('Home location created with ID:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My Home Office\",\n  \"latitude\": {{homeLatitude}},\n  \"longitude\": {{homeLongitude}},\n  \"proximityThreshold\": {{proximityThreshold}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						},
						"description": "Create a new home office location for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Create Work Office Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('workLocationId', response.id);",
									"    pm.environment.set('locationId', response.id);",
									"    console.log('Work location created with ID:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Company Office\",\n  \"latitude\": {{workLatitude}},\n  \"longitude\": {{workLongitude}},\n  \"proximityThreshold\": {{proximityThreshold}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						},
						"description": "Create a work office location for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Get User Locations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						},
						"description": "Get all locations for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Get Location by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations/{{locationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations",
								"{{locationId}}"
							]
						},
						"description": "Get a specific location by ID"
					},
					"response": []
				},
				{
					"name": "Update Location",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Office Location\",\n  \"latitude\": 13.7563,\n  \"longitude\": 100.5018,\n  \"proximityThreshold\": 150\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/locations/{{locationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations",
								"{{locationId}}"
							]
						},
						"description": "Update location details"
					},
					"response": []
				},
				{
					"name": "Toggle Location Active",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations/{{locationId}}/toggle",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations",
								"{{locationId}}",
								"toggle"
							]
						},
						"description": "Enable/disable a location"
					},
					"response": []
				},
				{
					"name": "Delete Location",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/locations/{{locationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations",
								"{{locationId}}"
							]
						},
						"description": "Delete a location (use with caution)"
					},
					"response": []
				}
			],
			"description": "Location management endpoints for office and client meeting locations"
		},
		{
			"name": "Attendance",
			"item": [
				{
					"name": "Check Proximity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"latitude\": {{homeLatitude}},\n  \"longitude\": {{homeLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance/proximity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance",
								"proximity"
							]
						},
						"description": "Check if user is within proximity of any of their locations"
					},
					"response": []
				},
				{
					"name": "Clock In at Home Office",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"in\",\n  \"latitude\": {{homeLatitude}},\n  \"longitude\": {{homeLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Clock in at home office location (auto-detects nearest location within threshold)"
					},
					"response": []
				},
				{
					"name": "Clock Out at Home Office",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"out\",\n  \"latitude\": {{homeLatitude}},\n  \"longitude\": {{homeLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Clock out at home office location"
					},
					"response": []
				},
				{
					"name": "Clock In at Work Office",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"in\",\n  \"latitude\": {{workLatitude}},\n  \"longitude\": {{workLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Clock in at work office location"
					},
					"response": []
				},
				{
					"name": "Clock Out at Work Office",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"out\",\n  \"latitude\": {{workLatitude}},\n  \"longitude\": {{workLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Clock out at work office location"
					},
					"response": []
				},
				{
					"name": "Get All Attendance Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Get all attendance logs for the authenticated user, ordered by timestamp (newest first)"
					},
					"response": []
				},
				{
					"name": "Get Today's Attendance Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/attendance/today",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance",
								"today"
							]
						},
						"description": "Get today's attendance logs for the authenticated user"
					},
					"response": []
				}
			],
			"description": "Attendance management endpoints with location-based clock in/out and proximity detection"
		},
		{
			"name": "Complete Workflow Examples",
			"item": [
				{
					"name": "1. Create Company",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Tech Solutions Inc.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/companies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"companies"
							]
						},
						"description": "Step 1: Create a new company"
					},
					"response": []
				},
				{
					"name": "2. Register User with Company",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"employee1\",\n  \"password\": \"password123\",\n  \"companyId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Step 2: Register user and assign to company"
					},
					"response": []
				},
				{
					"name": "3. Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.token);",
									"    pm.environment.set('userId', response.user.id);",
									"    pm.environment.set('username', response.user.username);",
									"    pm.environment.set('companyId', response.user.companyId || '');",
									"    console.log('User logged in successfully');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"employee1\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Step 3: Login to get JWT token"
					},
					"response": []
				},
				{
					"name": "4. Add Home Office Location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My Home Office\",\n  \"latitude\": {{homeLatitude}},\n  \"longitude\": {{homeLongitude}},\n  \"proximityThreshold\": {{proximityThreshold}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						},
						"description": "Step 4: Add home office location for the user"
					},
					"response": []
				},
				{
					"name": "5. Check Proximity to User's Locations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"latitude\": {{homeLatitude}},\n  \"longitude\": {{homeLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance/proximity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance",
								"proximity"
							]
						},
						"description": "Step 5: Check if user is within proximity of their locations"
					},
					"response": []
				},
				{
					"name": "6. Clock In at Home Office",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"in\",\n  \"latitude\": {{homeLatitude}},\n  \"longitude\": {{homeLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Step 6: Clock in at home office location"
					},
					"response": []
				},
				{
					"name": "7. Add Work Office Location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Company Office\",\n  \"latitude\": {{workLatitude}},\n  \"longitude\": {{workLongitude}},\n  \"proximityThreshold\": {{proximityThreshold}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"locations"
							]
						},
						"description": "Step 7: Add work office location for the user"
					},
					"response": []
				},
				{
					"name": "8. Clock In at Work Office",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"in\",\n  \"latitude\": {{workLatitude}},\n  \"longitude\": {{workLongitude}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Step 8: Clock in at work office location"
					},
					"response": []
				},
				{
					"name": "9. View All Attendance Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/attendance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attendance"
							]
						},
						"description": "Step 9: View all attendance logs with location information"
					},
					"response": []
				}
			],
			"description": "Complete workflow examples showing the full process from company creation to user-based location management and attendance tracking"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "username",
			"value": "employee1",
			"type": "string"
		},
		{
			"key": "password",
			"value": "password123",
			"type": "string"
		},
		{
			"key": "companyId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "locationId",
			"value": "1",
			"type": "string"
		}
	]
} 